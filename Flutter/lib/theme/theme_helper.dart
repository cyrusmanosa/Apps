import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  Map<String, PrimaryColors> _supportedCustomColor = {'primary': PrimaryColors()};
  Map<String, ColorScheme> _supportedColorScheme = {'primary': ColorSchemes.primaryColorScheme};

  /// Changes the app theme to [_newTheme].
  void changeTheme(String _newTheme) {
    _appTheme = _newTheme;
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception("$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map
    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception("$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme = _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.onPrimary,
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(color: appTheme.pinkA100, width: 1.h),
          shape: RoundedRectangleBorder(borderRadius: BorderRadiusStyle.r15),
          visualDensity: const VisualDensity(vertical: -4, horizontal: -4),
          padding: EdgeInsets.zero,
        ),
      ),
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.white,
          shape: RoundedRectangleBorder(borderRadius: BorderRadiusStyle.r30),
          visualDensity: const VisualDensity(vertical: -4, horizontal: -4),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(thickness: 1, space: 1, color: appTheme.black),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        // input hint word
        bodyMedium: TextStyle(color: appTheme.gray500, fontFamily: 'Rounded Mplus 1c', fontWeight: FontWeight.w400),
        // head
        headlineMedium: TextStyle(color: appTheme.black, fontFamily: 'Montserrat', fontWeight: FontWeight.w400),
        // Pink
        titleMedium: TextStyle(color: appTheme.pinkA100, fontFamily: 'Montserrat', fontWeight: FontWeight.w600),
        titleLarge: TextStyle(color: appTheme.pinkA100, fontFamily: 'Montserrat', fontWeight: FontWeight.w600),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFF1877F2),
    primaryContainer: Color(0XFF909090),

    // Error colors
    errorContainer: Color(0XFF9C3D3D),

    // On colors(text colors)
    onPrimary: Colors.white,
    onPrimaryContainer: Colors.red,
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  Color get black => Colors.black;
  Color get white => Colors.white;
  Color get blue => Color(0XFF1877F2);
  Color get green => Color.fromARGB(255, 21, 179, 0);
  Color get red => Colors.red;

  // Cyan
  Color get cyan600 => Color(0XFF1AB4BE);

  // Gray
  Color get gray500 => Color(0XFF909090);
  Color get gray800 => Color(0XFF454545);

  // Pink
  Color get maroon => Color(0XFF9C3D3D);
  Color get pinkA100 => Color(0XFFFF83A8);
  Color get pinkA400 => Color(0XFFFF00B7);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
