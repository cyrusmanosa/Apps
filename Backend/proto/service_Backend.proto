syntax = "proto3";

package pb;

import "rpc_fix.proto";
import "rpc_canChange.proto";
import "rpc_changeTarget.proto";
import "rpc_accompany.proto";
import "rpc_complaint.proto";
import "rpc_targetList.proto";
import "rpc_hobby.proto";
import "rpc_images.proto";
import "rpc_lover.proto";
import "rpc_login.proto";
import "rpc_password.proto";
import "rpc_checkEmail.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "Backend/pb";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "A Bit of Everything";
        version: "1.0";
        contact: {
        name: "App";
        url: "https://github.com/cyrusmanosa/Apps";
        email: "cyrusmanosa@gmail.com";
        };
    };
};

service Backend {
    rpc loginUser(loginUserRequest) returns (loginUserResponse){
        option (google.api.http) = {
            post: "/v1/Login"
            body: "*"
        };
    }

    rpc CheckEmail(checkEmailRequest) returns (checkEmailResponse){
        option (google.api.http) = {
            post: "/v1/Sign_Up"
            body: "*"
        };
    }

    rpc CheckEmailCode(sendEmailRequest) returns (checkedEmailResponse){
        option (google.api.http) = {
            post: "/v1/Check_Code"
            body: "*"
        };
    }

    rpc InputPassword(inputPasswordRequest) returns (inputPasswordResponse){
        option (google.api.http) = {
            put: "/v1/Password_Setup"
            body: "*"
        };
    }
    rpc ResetPassword(resetPasswordRequest) returns (resetPasswordResponse){
        option (google.api.http) = {
            put: "/v1/Reset_Password"
            body: "*"
        };
    }

    // Fix Information
    rpc CreateFix(createFixRequest) returns (createFixResponse){
        option (google.api.http) = {
            post: "/v1/Create_Fix"
            body: "*"
        };
    }

    // Can Change Information
    rpc CreateCanChange(createCanChangeRequest) returns (createCanChangeResponse){
        option (google.api.http) = {
            post: "/v1/Create_CanChange"
            body: "*"
        };
    }
    rpc GetCanChange(getCanChangeRequest) returns (getCanChangeResponse){
        option (google.api.http) = {
            get: "/v1/Get_CanChange"
        };
    }
    rpc UpdateCanChange(updateCanChangeRequest) returns (updateCanChangeResponse){
        option (google.api.http) = {
            put: "/v1/Update_CanChange"
            body: "*"
        };
    }

    // Accompany
    rpc CreateAccompany(createAccompanyRequest) returns (createAccompanyResponse){
        option (google.api.http) = {
            post: "/v1/Create_Accompany"
            body: "*"
        };
    }
    rpc GetAccompany(getAccompanyRequest) returns (getAccompanyResponse){
        option (google.api.http) = {
            get: "/v1/Get_Accompany"
        };
    }
    rpc UpdateAccompany(updateAccompanyRequest) returns (updateAccompanyResponse){
        option (google.api.http) = {
            put: "/v1/Update_Accompany"
            body: "*"
        };
    }

    // Hobby
    rpc CreateHobby(createHobbyRequest) returns (createHobbyResponse){
        option (google.api.http) = {
            post: "/v1/Create_Hobby"
            body: "*"
        };
    }
    rpc GetHobby(getHobbyRequest) returns (getHobbyResponse){
        option (google.api.http) = {
            get: "/v1/Get_Hobby"
        };
    }
    rpc UpdateHobby(updateHobbyRequest) returns (updateHobbyResponse){
        option (google.api.http) = {
            put: "/v1/Update_Hobby"
            body: "*"
        };
    }

    // Lover
    rpc CreateLover(createLoverRequest) returns (createLoverResponse){
        option (google.api.http) = {
            post: "/v1/Create_Lover"
            body: "*"
        };
    }
    rpc GetLover(getLoverRequest) returns (getLoverResponse){
        option (google.api.http) = {
            get: "/v1/Get_Lover"
        };
    }
    rpc UpdateLover(updateLoverRequest) returns (updateLoverResponse){
        option (google.api.http) = {
            put: "/v1/Update_Lover"
            body: "*"
        };
    }

    // Complaint
    rpc CreateComplaint(createComplaintRequest) returns (createComplaintResponse){
        option (google.api.http) = {
            post: "/v1/Create_Complaint"
            body: "*"
        };
    }
    rpc GetComplaint(getComplaintRequest) returns (getComplaintResponse){
        option (google.api.http) = {
            get: "/v1/Get_Complaint"
        };
    }
    rpc UpdateComplaint(updateComplaintRequest) returns (updateComplaintResponse){
        option (google.api.http) = {
            put: "/v1/Update_Complaint"
            body: "*"
        };
    }

    // Target List
    rpc CreateTargetList(createTargetListRequest) returns (createTargetListResponse){
        option (google.api.http) = {
            post: "/v1/Create_TargetList"
            body: "*"
        };
    }
    rpc GetTargetList(getTargetListRequest) returns (getTargetListResponse){
        option (google.api.http) = {
            get: "/v1/Get_TargetList"
        };
    }
    rpc UpdateTargetList(updateTargetListRequest) returns (updateTargetListResponse){
        option (google.api.http) = {
            put: "/v1/Update_TargetList"
            body: "*"
        };
    }
    
    // Change Target
    rpc CreateChangeTarget(createChangeTargetRequest) returns (createChangeTargetResponse) {
        option (google.api.http) = {
            post: "/v1/Create_ChangeTarget"
            body: "*"
        };
    }

    rpc GetChangeTarget(getChangeTargetRequest) returns (getChangeTargetResponse){
        option (google.api.http) = {
            get: "/v1/Get_ChangeTarget"
        };
    }
    
    // images
    rpc CreateImages(createImagesRequest) returns (createImagesResponse){
        option (google.api.http) = {
            post: "/v1/Create_Images"
            body: "*"
        };
    }
    rpc GetImages(getImagesRequest) returns (getImagesResponse){
        option (google.api.http) = {
            get: "/v1/Get_Images"
        };
    }
    rpc UpdateImages(updateImagesRequest) returns (updateImagesResponse){
        option (google.api.http) = {
            put: "/v1/Update_ImagesResponse"
            body: "*"
        };
    }
}